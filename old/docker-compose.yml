version: '3.7'

networks:
  root_access:
    name: root_access

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    networks:
      - root_access
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker
    container_name: broker
    restart: unless-stopped
    networks:
      - root_access
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  app:
    image: frostcow/root-access:app-1.0.0-arm
    container_name: app
    depends_on:
      - broker
    secrets:
      - kafkaScriptSecret
    entrypoint:
      - bash
      - -c
      - |
        echo 'Giving broker time to start. . .'
        sleep 30
        /run/secrets/kafkaScriptSecret
    networks:
      - root_access
    devices:
      - '/dev/ttyACM0:/dev/ttyACM0'
    ports:
      - 3000:3000
    working_dir: /Root-Access
    volumes:
      - .:/app
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    restart: unless-stopped
    networks:
      - root_access
    depends_on:
     - broker
     - zookeeper
    ports:
     - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  connect:
    image: frostcow/root-access:connect-1.0.0-arm
    hostname: connect
    container_name: connect
    restart: unless-stopped
    secrets:
        - connectScriptSecret
    networks:
      - root_access
    depends_on:
      - broker
      - zookeeper
      - app
    ports:
      - "8083:8083"
    entrypoint:
      - bash
      - -c
      - |
        echo 'Giving broker time to start. . .'
        sleep 40
        /run/secrets/connectScriptSecret
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
      CONNECT_GROUP_ID: mysql
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_config
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_CONFIG_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_REPLICATION_FACTOR: 1
      CONNECT_STATUS_REPLICATION_FACTOR: 1
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'localhost'
      CONNECT_HOST: 'localhost'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
  
  mariadb: # Port 3306
    image: frostcow/root-access:db-1.0.0-arm
    container_name: mariadb
    hostname: mariadb
    restart: unless-stopped
    networks:
     - root_access
    volumes:
     - database:/var/lib/mysql # This is correct
    environment:
      MARIADB_USER: cmst
      MARIADB_PASSWORD: agroponics

volumes:
  database:
    name: database

secrets:
  connectScriptSecret:
    file: ./container_scripts/connect_script
  kafkaScriptSecret:
    file: ./container_scripts/kafka_script